name: Windows Server with RDP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360 # 6 часов
    steps:
    - name: Download ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "."
        
    - name: Authenticate ngrok
      run: |
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP
      run: |
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd123" -Force)

    - name: Start ngrok tunnel
      run: |
        Start-Process -FilePath "./ngrok" -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 10
        Invoke-WebRequest -Uri "http://localhost:4040/api/tunnels" -OutFile "tunnels.json"
        $tunnel = Get-Content "tunnels.json" | ConvertFrom-Json
        $publicUrl = $tunnel.tunnels[0].public_url
        Write-Output "RDP Address: $publicUrl"
        Write-Output "Username: runneradmin"
        Write-Output "Password: P@ssw0rd123"

    - name: Keep alive
      run: |
        Start-Sleep -Seconds 21600 # 6 часов
