name: Setup SSH Access (Terminal Only)

on:
  workflow_dispatch:
    inputs:
      ssh_key:
        description: 'SSH private key for access (base64 encoded)'
        required: true

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360 # 6 часов
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Enable RDP (Optional - Disabled for terminal-only)
      run: |
        # Если вы хотите, чтобы RDP был доступен, можете оставить этот шаг
        # Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0 -ErrorAction Stop
        # Enable-NetFirewallRule -DisplayGroup "Remote Desktop" -ErrorAction Stop
        # Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 1 -ErrorAction Stop
        Write-Output "RDP is disabled. Only SSH access is available."

    - name: Install OpenSSH Server
      run: |
        # Установим OpenSSH сервер для Windows, чтобы был доступ к SSH
        Add-WindowsFeature -Name 'OpenSSH-Server'
        Start-Service sshd
        Set-Service -Name sshd -StartupType 'Automatic'
        Write-Output "OpenSSH server installed and started."

    - name: Add SSH key for authentication
      run: |
        # Декодируем SSH ключ из base64 и добавляем его в систему
        $key = [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String("${{ github.event.inputs.ssh_key }}"))
        $sshDir = "$env:USERPROFILE\.ssh"
        if (-not (Test-Path -Path $sshDir)) {
          New-Item -ItemType Directory -Force -Path $sshDir
        }
        $keyPath = "$sshDir\id_rsa"
        $key | Out-File -FilePath $keyPath -Force
        # Установим правильные права на ключ
        icacls $keyPath /inheritance:r /grant:r "$($env:USERNAME):(F)"
        Write-Output "SSH private key added successfully."

    - name: Configure SSH Access
      run: |
        # Для Windows 10/Server нужна настройка SSH
        $sshConfig = "$env:USERPROFILE\.ssh\config"
        if (-not (Test-Path -Path $sshConfig)) {
          New-Item -ItemType File -Force -Path $sshConfig
        }
        # Добавим конфигурацию для подключения через SSH
        Add-Content -Path $sshConfig -Value "Host *"
        Add-Content -Path $sshConfig -Value "  User runneradmin"
        Add-Content -Path $sshConfig -Value "  IdentityFile $env:USERPROFILE\.ssh\id_rsa"
        Write-Output "SSH configuration updated."

    - name: Keep Server Running
      run: |
        Write-Output "Server is running. Connect via SSH."
        Start-Sleep -Seconds 21600 # 6 часов
      shell: powershell







